
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # 'exec-and-forget borders active_color=0xff494d64 inactive_color=0xffe1e3e4 width=1.0'
]


# Start AeroSpace at login
start-at-login = true

on-focus-changed = [
    #  'move-mouse window-lazy-center',
    #  'exec-and-forget /bin/bash -c /opt/homebrew/bin/sketchybar --trigger front_app_switched',
    #  'exec-and-forget sketchybar --trigger update_windows'
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = false
enable-normalization-opposite-orientation-for-nested-containers = false

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30
# Possible values: tiles|accordion
# default-root-container-layout = 'tiles'
# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#  tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'
# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'
# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = ['move-mouse window-lazy-center']


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-wor11kspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right
# All possible modifiers: cmd, alt, ctrl, shift
# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
ctrl-alt-f = 'exec-and-forget open /System/Library/CoreServices/Finder.app'
# ctrl-enter = 'exec-and-forget open -n /Applications/Alacritty.app'
# ctrl-alt-b = "exec-and-forget open -n /Applications/'Brave Browser.app'"
ctrl-alt-s = "exec-and-forget open -n /Applications/'Sublime Text.app'"
ctrl-alt-v = "exec-and-forget open -n /Applications/'Visual Studio Code.app'"
ctrl-enter = 'exec-and-forget open -n /Applications/Ghostty.app/'
ctrl-alt-l = 'exec-and-forget open -n /System/Applications/Launchpad.app'
ctrl-alt-p = 'exec-and-forget /bin/bash -c $HOME/bin/lofi-beats'
ctrl-alt-b = 'exec-and-forget /bin/bash -c $HOME/bin/brave-url'
ctrl-alt-t = 'exec-and-forget /bin/bash -c $HOME/bin/tv-live'
ctrl-alt-m = 'exec-and-forget /bin/bash -c $HOME/bin/sel-apps'
ctrl-alt-q = 'exec-and-forget /bin/bash -c $HOME/bin/system.sh'
ctrl-alt-r = 'exec-and-forget /bin/bash -c $HOME/bin/set_random_wallpaper.sh'

# custom  key aerospace
# ctrl-alt-right = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace move-node-to-workspace --fail-if-noop  --focus-follows-window 5 | aerospace resize smart -80'
# ctrl-alt-left = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace move-node-to-workspace --focus-follows-window --wrap-around next'

# https://nikitabobko.github.io/AeroSpace/commands#close
ctrl-cmd-w = 'close --quit-if-last-window'

# i3 wraps focus by default
alt-j = 'focus --boundaries-action wrap-around-the-workspace left'
alt-k = 'focus --boundaries-action wrap-around-the-workspace down'
alt-l = 'focus --boundaries-action wrap-around-the-workspace up'
alt-semicolon = 'focus --boundaries-action wrap-around-the-workspace right'
alt-h = 'split horizontal'
alt-v = 'split vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-slash = 'layout tiles horizontal vertical'
ctrl-comma = 'layout accordion horizontal vertical'

# https://nikitabobko.github.io/AeroSpace/commands#macos-native-fullscreen
ctrl-shift-f = 'macos-native-fullscreen'
ctrl-f = 'fullscreen --no-outer-gaps'

ctrl-h = 'focus left --ignore-floating'
ctrl-j = 'focus down --ignore-floating'
ctrl-k = 'focus up --ignore-floating'
ctrl-l = 'focus right --ignore-floating'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-cmd-h = 'move left'
ctrl-cmd-j = 'move down'
ctrl-cmd-k = 'move up'
ctrl-cmd-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-cmd-minus = 'resize smart +80'
ctrl-cmd-equal = 'resize smart -80'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-1 = 'workspace 1'
cmd-2 = 'workspace 2'
cmd-3 = 'workspace 3'
cmd-4 = 'workspace 4'
cmd-5 = 'workspace 5'
cmd-6 = 'workspace 6'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-cmd-1 = 'move-node-to-workspace --focus-follows-window 1'
ctrl-cmd-2 = 'move-node-to-workspace --focus-follows-window 2'
ctrl-cmd-3 = 'move-node-to-workspace --focus-follows-window 3'
ctrl-cmd-4 = 'move-node-to-workspace --focus-follows-window 4'
ctrl-cmd-5 = 'move-node-to-workspace --focus-follows-window 5'
ctrl-cmd-6 = 'move-node-to-workspace --focus-follows-window 6'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
ctrl-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# ctrl-shift-alt-cmd-tab = 'move-workspace-to-monitor --wrap-around next'
ctrl-p = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-cmd-semicolon = 'mode service'

# 'service' binding moâ„¢de declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

ctrl-alt-h = ['join-with left', 'mode main']
ctrl-alt-a = ['join-with down', 'mode main']
ctrl-alt-o = ['join-with up', 'mode main']
ctrl-alt-e = ['join-with right', 'mode main']

# System Preferences
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = "move-node-to-workspace 1"


# Code
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = "move-node-to-workspace 2"

# Brave
[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = "move-node-to-workspace 3"

# Alacritty
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace 4"

# Sublime Text
[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = "move-node-to-workspace 2"

# AppStore
[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = ['layout floating', 'move-node-to-workspace 1'] # The callback itself

# Finder
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating', 'move-node-to-workspace 1']

# mpv
[[on-window-detected]]
if.app-id = 'MPV'
run = ['layout floating', 'move-node-to-workspace 5']


[workspace-to-monitor-force-assignment]
1 = 1 # Monitor sequence number from left to right. 1-based indexing
2 = 'main' # Main monitor
3 = 'secondary' # Non-main monitor in case when there are only two monitors
4 = 'built-in' # Case insensitive regex substring
5 = '^built-in retina display$' # Case insensitive regex match
6 = [
    'secondary',
    'dell',
] # You can specify multiple patterns. The first matching pattern will be used
